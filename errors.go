package submail

// APIError API错误结构
type APIError struct {
	Code int    // 错误码
	Msg  string // 错误消息
}

// Error 实现error接口
func (e *APIError) Error() string {
	return e.Msg
}

// 错误代码映射表 - 根据SUBMAIL官方文档
var errorCodeMap = map[int]string{
	// 应用和身份验证相关错误 (101-120)
	101: "不正确的 APP ID",
	102: "此应用已被禁用，请至 submail > 应用集成 > 应用 页面开启此应用",
	103: "未启用的开发者，此应用的开发者身份未验证，请更新您的开发者资料",
	104: "此开发者未通过验证或此开发者资料发生更改。请至应用集成页面更新你的开发者资料",
	105: "此账户已过期",
	106: "此账户已被禁用",
	107: "sign_type （验证模式）必须设置为 MD5（MD5签名模式）或 SHA1（SHA1签名模式）或 normal (密匙模式).",
	108: "signature 参数无效",
	109: "appkey 无效",
	110: "sign_type 错误",
	111: "空的 signature 参数",
	112: "应用的订阅与退订功能已禁用。",
	113: "请求的 APPID 已设置 IP 白名单，您的 IP 不在此白名单范围",
	114: "该手机号码在账户黑名单中，已被屏蔽",
	115: "该手机号码请求超限",
	116: "签名错误，该签名已被其他应用使用并已申请固定签名",
	117: "该模板已失效，短信模板签名与固定签名不一致或你的账户已取消固签，请联系 SUBMAIL 管理员",
	118: "该模板已失效，请联系SUBMAIL管理员",
	119: "您不具备使用该API的权限，请联系SUBMAIL管理员",
	120: "模板已失效",
	126: "短信签名还未报备成功",
	127: "短信签名已存在，无需创建新签名",

	// 时间戳相关错误 (151-154)
	151: "错误的 UNIX 时间戳",
	152: "错误的 UNIX 时间戳，请将请求 UNIX 时间戳 至 发送 API 的过程控制在6秒以内",
	154: "appid 下无可用签名",

	// 地址簿相关错误 (201-203)
	201: "未知的 addressbook 模式",
	202: "错误的收件人地址",
	203: "错误的收件人地址。如果你正在使用 adressbook , 你所标记的地址薄不包含任何联系人。",

	// 短信地址相关错误 (251-253)
	251: "错误的收件人地址（message）",
	252: "错误的收件人地址（message）如果你正在使用 adressbook 模式，你所标记的地址薄不包含任何联系人。",
	253: "此联系人已退订你的短信系统。",

	// 项目和参数错误 (305-310)
	305: "没有填写项目标记",
	306: "无效的项目标记",
	307: "错误的 json 格式。 请检查 vars 和 links 参数",
	310: "tag参数长度不能超过32个字符。",

	// 短信内容和签名相关错误 (401-422)
	401: "短信签名不能为空。",
	402: "请将短信签名控制在40个字符以内。",
	403: "短信正文不能为空",
	404: "请将短信内容（加上签名）控制在1000个字符以内。",
	405: "依据当地法律法规，以下'$var'词或短语不能出现在短信中。",
	406: "项目标记不能为空",
	407: "无效的项目标记",
	408: "你不能向此联系人或此地址簿中包含的联系人发送完全相同的短信。",
	409: "尝试发送的短信项目正在审核中，请稍候再试。",
	410: "multi 参数无效",
	411: "您必须为每条短信模板提交一个短信签名，且该签名必须使用全角大括号【和】包括起来，请将短信签名的字数控制在2至10字符以内（括号不计算字符数）",
	412: "请将短信签名的字数控制在10字符以内（括号不计算字符数）",
	413: "请将短信签名的字数控制在2到10个字符之间（括号不计算字符数）",
	414: "请提交短信正文",
	415: "请将短信正文的字数控制在1000个字符以内",
	416: "请将短信标题的字数控制在64个字符以内",
	417: "请提交需要更新的模板ID",
	418: "尝试更新的模板不存在",
	419: "短信正文不能为空",
	420: "找不到可匹配的模板",
	422: "请控制您的模板长度在255个字符内。",

	// 地址簿错误 (501)
	501: "错误的目标地址簿标识",

	// 余额和配额相关错误 (901-905)
	901: "你今日的发送配额已用尽。如需提高发送配额，请至 submail > 应用集成 >应用 页面开启更多发送配额",
	903: "您的短信发送许可已用尽或您的余额不支持本次的请求数量。如需继续发送，请至 submail.cn > 商店 页面购买更多发送许可后重试。",
	904: "您的账户余额已用尽或您的余额不支持本次的请求数量。如需继续充值，请至 submail.cn > 商店 页面购买更多发送许可后重试。",
	905: "您的账户余额已用尽或您的余额不支持本次的请求数量。如需继续充值，请至 submail.cn > 商店 页面购买更多发送许可后重试。",
}

// JSON 解码错误子代码映射表
var jsonDecodingErrorMap = map[int]string{
	1: "到达了最大堆栈深度",
	2: "无效或异常的 JSON",
	3: "控制字符错误，可能是编码不对",
	4: "语法错误",
	5: "异常的 UTF-8 字符，也许是因为不正确的编码",
}

// 时间相关错误码列表
var timeRelatedErrorCodes = map[int]bool{
	151: true, // 错误的 UNIX 时间戳
	152: true, // 错误的 UNIX 时间戳，请将请求 UNIX 时间戳 至 发送 API 的过程控制在6秒以内
}

// FromAPIResponse 从API响应创建错误
func FromAPIResponse(resp *APIResponse) *APIError {
	if resp.Status == "success" {
		return nil // 成功响应不返回错误
	}

	// 获取错误消息，优先使用中文错误映射
	msg := resp.Msg
	if chineseMsg, exists := errorCodeMap[resp.Code]; exists {
		msg = chineseMsg
	}

	// 特殊处理 JSON 解码错误 (307, 309)
	if (resp.Code == 307 || resp.Code == 309) && resp.JSONDecodingError > 0 {
		if jsonErrorMsg, exists := jsonDecodingErrorMap[resp.JSONDecodingError]; exists {
			msg += "，具体原因：" + jsonErrorMsg
		}
	}

	// 如果没有消息，使用默认消息
	if msg == "" {
		msg = "未知错误"
	}

	return &APIError{
		Code: resp.Code,
		Msg:  msg,
	}
}

// IsTimeRelatedError 检查是否为时间相关错误
func IsTimeRelatedError(code int) bool {
	return timeRelatedErrorCodes[code]
}
